% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsmartr_evaluate.R
\name{eval_npred}
\alias{eval_npred}
\title{Calculate soil classes per pixel}
\usage{
eval_npred(tallied_preds = NULL, cpus = 1, n_iterations = NULL,
  noise_cutoff = NULL)
}
\arguments{
\item{tallied_preds}{RasterBrick; 'tallied_predictions' output by
\code{\link[dsmartr:collate]{collate}}.}

\item{cpus}{Integer; number of processors to use in parallel.}

\item{n_iterations}{Optional Integer; the number of iterations supplied to
\code{\link[dsmartr:iterate]{iterate}}.}

\item{noise_cutoff}{Optional Decimal; proportion of predictions to be considered 'noise' and
ignored. Acceptable values range between 0 and 1 inclusive. Defaults to 0.}
}
\value{
\code{n_classes_predicted}: RasterLayer depicting the number of distinct soils predicted
  per pixel more than \code{n_iterations * noise_cutoff} times. Written to disk as GeoTIFF.
}
\description{
Calculates and maps the number of distinct soil classes predicted. Requires outputs of
\code{\link[dsmartr:collate]{collate}}.
}
\note{
Fewer classes predicted on a pixel generally indicates higher internal model confidence at
  that location.
}
\examples{
\dontrun{
# run iterate() and collate() with the example data then:
nxpred <- eval_nxpred(tallied_preds = collated[['tallied_predictions']],
                      cpus = max(1, (parallel::detectCores() - 1)),
                      n_iterations = nlayers(iteration_maps), noise_cutoff = 0.1)
                      }
}
