% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsmartr_evaluate.R
\name{dsmartr_eval_nxpred}
\alias{dsmartr_eval_nxpred}
\title{Calculate notable soil classes per pixel}
\usage{
dsmartr_eval_nxpred(tallied_preds = NULL, cpus = 1, n_iterations = NULL,
  noise_cutoff = 0.1)
}
\arguments{
\item{tallied_preds}{RasterBrick; 'tallied_predictions' output by \code{\link{dsmartr_collate}}.}

\item{cpus}{Integer; number of processors to use in parallel.}

\item{n_iterations}{Integer; the number of iterations supplied to \code{\link{dsmartr_iterate}}.}

\item{noise_cutoff}{Decimal; proportion of predictions to be considered 'noise' and ignored.}
}
\value{
\code{n_classes_predicted}: RasterLayer depicting the number of distinct soils predicted
  per pixel more than \code{n_iterations * noise_cutoff} times. Written to disk as GeoTIFF.
}
\description{
Calculates and maps the number of distinct soil classes predicted in more than a
given proportion of iterations. Requires outputs of \code{\link{dsmartr_collate}} (with option
\code{keep_tallies = TRUE}).
}
\note{
Fewer classes predicted on a pixel generally indicates higher internal model confidence at
  that location.
}
\examples{
\dontrun{
# run dsmartr_iterate() and dsmartr_collate() with the example data then:
nxpred <- dsmartr_eval_nxpred(tallied_preds = collated[['tallied_predictions']],
cpus = max(1, (parallel::detectCores() - 1)),
n_iterations = nlayers(iteration_maps), noise_cutoff = 0.1)}
}
